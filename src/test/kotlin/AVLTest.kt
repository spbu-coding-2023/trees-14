import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test
import src.trees.AVLTree

class AVLTest {
    @Test
    fun intInsertion1() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(562, 989)
        tree.add(562, 989)
        std.put(909, 89)
        tree.add(909, 89)
        std.put(176, 636)
        tree.add(176, 636)
        std.put(841, 472)
        tree.add(841, 472)
        std.put(476, 350)
        tree.add(476, 350)
        std.put(919, 0)
        tree.add(919, 0)
        std.put(13, 644)
        tree.add(13, 644)
        std.put(654, 254)
        tree.add(654, 254)
        std.put(333, 696)
        tree.add(333, 696)
        std.put(873, 920)
        tree.add(873, 920)
        std.put(759, 797)
        tree.add(759, 797)
        std.put(522, 917)
        tree.add(522, 917)
        std.put(115, 40)
        tree.add(115, 40)
        std.put(639, 794)
        tree.add(639, 794)
        std.put(71, 182)
        tree.add(71, 182)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intInsertion2() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(958, 32)
        tree.add(958, 32)
        std.put(609, 292)
        tree.add(609, 292)
        std.put(140, 190)
        tree.add(140, 190)
        std.put(325, 668)
        tree.add(325, 668)
        std.put(520, 309)
        tree.add(520, 309)
        std.put(488, 216)
        tree.add(488, 216)
        std.put(651, 304)
        tree.add(651, 304)
        std.put(244, 947)
        tree.add(244, 947)
        std.put(714, 836)
        tree.add(714, 836)
        std.put(833, 658)
        tree.add(833, 658)
        std.put(494, 999)
        tree.add(494, 999)
        std.put(489, 298)
        tree.add(489, 298)
        std.put(843, 45)
        tree.add(843, 45)
        std.put(649, 600)
        tree.add(649, 600)
        std.put(979, 37)
        tree.add(979, 37)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intInsertion3() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(874, 308)
        tree.add(874, 308)
        std.put(195, 107)
        tree.add(195, 107)
        std.put(693, 697)
        tree.add(693, 697)
        std.put(498, 938)
        tree.add(498, 938)
        std.put(382, 178)
        tree.add(382, 178)
        std.put(603, 555)
        tree.add(603, 555)
        std.put(139, 192)
        tree.add(139, 192)
        std.put(44, 133)
        tree.add(44, 133)
        std.put(121, 978)
        tree.add(121, 978)
        std.put(978, 61)
        tree.add(978, 61)
        std.put(847, 852)
        tree.add(847, 852)
        std.put(612, 786)
        tree.add(612, 786)
        std.put(422, 650)
        tree.add(422, 650)
        std.put(328, 6)
        tree.add(328, 6)
        std.put(410, 449)
        tree.add(410, 449)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intInsertion4() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(377, 232)
        tree.add(377, 232)
        std.put(205, 915)
        tree.add(205, 915)
        std.put(416, 936)
        tree.add(416, 936)
        std.put(406, 294)
        tree.add(406, 294)
        std.put(27, 119)
        tree.add(27, 119)
        std.put(537, 509)
        tree.add(537, 509)
        std.put(143, 123)
        tree.add(143, 123)
        std.put(15, 585)
        tree.add(15, 585)
        std.put(966, 296)
        tree.add(966, 296)
        std.put(128, 44)
        tree.add(128, 44)
        std.put(610, 848)
        tree.add(610, 848)
        std.put(385, 11)
        tree.add(385, 11)
        std.put(636, 853)
        tree.add(636, 853)
        std.put(37, 50)
        tree.add(37, 50)
        std.put(716, 346)
        tree.add(716, 346)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intInsertion5() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(408, 825)
        tree.add(408, 825)
        std.put(921, 116)
        tree.add(921, 116)
        std.put(333, 536)
        tree.add(333, 536)
        std.put(531, 52)
        tree.add(531, 52)
        std.put(189, 884)
        tree.add(189, 884)
        std.put(727, 528)
        tree.add(727, 528)
        std.put(766, 46)
        tree.add(766, 46)
        std.put(887, 500)
        tree.add(887, 500)
        std.put(561, 201)
        tree.add(561, 201)
        std.put(169, 637)
        tree.add(169, 637)
        std.put(584, 474)
        tree.add(584, 474)
        std.put(338, 521)
        tree.add(338, 521)
        std.put(730, 454)
        tree.add(730, 454)
        std.put(971, 259)
        tree.add(971, 259)
        std.put(496, 486)
        tree.add(496, 486)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intInsertion6() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(774, 295)
        tree.add(774, 295)
        std.put(18, 249)
        tree.add(18, 249)
        std.put(384, 598)
        tree.add(384, 598)
        std.put(694, 923)
        tree.add(694, 923)
        std.put(24, 36)
        tree.add(24, 36)
        std.put(562, 405)
        tree.add(562, 405)
        std.put(575, 747)
        tree.add(575, 747)
        std.put(294, 828)
        tree.add(294, 828)
        std.put(52, 667)
        tree.add(52, 667)
        std.put(358, 143)
        tree.add(358, 143)
        std.put(818, 564)
        tree.add(818, 564)
        std.put(885, 230)
        tree.add(885, 230)
        std.put(637, 984)
        tree.add(637, 984)
        std.put(762, 150)
        tree.add(762, 150)
        std.put(100, 810)
        tree.add(100, 810)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intInsertion7() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(287, 268)
        tree.add(287, 268)
        std.put(991, 83)
        tree.add(991, 83)
        std.put(381, 402)
        tree.add(381, 402)
        std.put(488, 670)
        tree.add(488, 670)
        std.put(350, 109)
        tree.add(350, 109)
        std.put(26, 117)
        tree.add(26, 117)
        std.put(142, 256)
        tree.add(142, 256)
        std.put(682, 712)
        tree.add(682, 712)
        std.put(153, 126)
        tree.add(153, 126)
        std.put(691, 793)
        tree.add(691, 793)
        std.put(655, 703)
        tree.add(655, 703)
        std.put(814, 277)
        tree.add(814, 277)
        std.put(467, 264)
        tree.add(467, 264)
        std.put(735, 76)
        tree.add(735, 76)
        std.put(660, 200)
        tree.add(660, 200)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intInsertion8() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(780, 992)
        tree.add(780, 992)
        std.put(65, 461)
        tree.add(65, 461)
        std.put(414, 923)
        tree.add(414, 923)
        std.put(11, 631)
        tree.add(11, 631)
        std.put(187, 469)
        tree.add(187, 469)
        std.put(298, 723)
        tree.add(298, 723)
        std.put(747, 997)
        tree.add(747, 997)
        std.put(707, 271)
        tree.add(707, 271)
        std.put(752, 460)
        tree.add(752, 460)
        std.put(488, 379)
        tree.add(488, 379)
        std.put(511, 876)
        tree.add(511, 876)
        std.put(803, 267)
        tree.add(803, 267)
        std.put(101, 154)
        tree.add(101, 154)
        std.put(526, 259)
        tree.add(526, 259)
        std.put(129, 273)
        tree.add(129, 273)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intInsertion9() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(161, 820)
        tree.add(161, 820)
        std.put(274, 920)
        tree.add(274, 920)
        std.put(471, 425)
        tree.add(471, 425)
        std.put(792, 992)
        tree.add(792, 992)
        std.put(362, 999)
        tree.add(362, 999)
        std.put(285, 978)
        tree.add(285, 978)
        std.put(496, 548)
        tree.add(496, 548)
        std.put(617, 687)
        tree.add(617, 687)
        std.put(28, 441)
        tree.add(28, 441)
        std.put(776, 920)
        tree.add(776, 920)
        std.put(954, 796)
        tree.add(954, 796)
        std.put(764, 886)
        tree.add(764, 886)
        std.put(935, 480)
        tree.add(935, 480)
        std.put(250, 884)
        tree.add(250, 884)
        std.put(206, 998)
        tree.add(206, 998)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intInsertion10() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(905, 374)
        tree.add(905, 374)
        std.put(407, 774)
        tree.add(407, 774)
        std.put(95, 615)
        tree.add(95, 615)
        std.put(189, 472)
        tree.add(189, 472)
        std.put(445, 179)
        tree.add(445, 179)
        std.put(522, 117)
        tree.add(522, 117)
        std.put(852, 441)
        tree.add(852, 441)
        std.put(950, 146)
        tree.add(950, 146)
        std.put(3, 756)
        tree.add(3, 756)
        std.put(287, 997)
        tree.add(287, 997)
        std.put(675, 540)
        tree.add(675, 540)
        std.put(129, 594)
        tree.add(129, 594)
        std.put(543, 447)
        tree.add(543, 447)
        std.put(520, 488)
        tree.add(520, 488)
        std.put(238, 814)
        tree.add(238, 814)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion1() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(560, 962)
        tree.add(560, 962)
        std.put(417, 356)
        tree.add(417, 356)
        std.put(587, 890)
        tree.add(587, 890)
        std.put(20, 187)
        tree.add(20, 187)
        std.put(338, 679)
        tree.add(338, 679)
        std.put(229, 232)
        tree.add(229, 232)
        std.put(566, 60)
        tree.add(566, 60)
        std.put(377, 257)
        tree.add(377, 257)
        std.put(19, 16)
        tree.add(19, 16)
        std.put(540, 997)
        tree.add(540, 997)
        std.put(173, 155)
        tree.add(173, 155)
        std.put(680, 25)
        tree.add(680, 25)
        std.put(709, 410)
        tree.add(709, 410)
        std.put(135, 263)
        tree.add(135, 263)
        std.put(23, 738)
        tree.add(23, 738)
        std.remove(147)
        tree.delete(147)
        std.remove(688)
        tree.delete(688)
        std.remove(654)
        tree.delete(654)
        std.remove(497)
        tree.delete(497)
        std.remove(891)
        tree.delete(891)
        std.remove(519)
        tree.delete(519)
        std.remove(968)
        tree.delete(968)
        std.remove(43)
        tree.delete(43)
        std.remove(706)
        tree.delete(706)
        std.remove(55)
        tree.delete(55)
        std.remove(858)
        tree.delete(858)
        std.remove(747)
        tree.delete(747)
        std.remove(972)
        tree.delete(972)
        std.remove(878)
        tree.delete(878)
        std.remove(211)
        tree.delete(211)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion2() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(934, 381)
        tree.add(934, 381)
        std.put(954, 163)
        tree.add(954, 163)
        std.put(657, 830)
        tree.add(657, 830)
        std.put(453, 312)
        tree.add(453, 312)
        std.put(386, 637)
        tree.add(386, 637)
        std.put(782, 630)
        tree.add(782, 630)
        std.put(508, 41)
        tree.add(508, 41)
        std.put(254, 741)
        tree.add(254, 741)
        std.put(920, 945)
        tree.add(920, 945)
        std.put(810, 128)
        tree.add(810, 128)
        std.put(831, 344)
        tree.add(831, 344)
        std.put(859, 107)
        tree.add(859, 107)
        std.put(520, 617)
        tree.add(520, 617)
        std.put(752, 43)
        tree.add(752, 43)
        std.put(308, 756)
        tree.add(308, 756)
        std.remove(572)
        tree.delete(572)
        std.remove(231)
        tree.delete(231)
        std.remove(225)
        tree.delete(225)
        std.remove(277)
        tree.delete(277)
        std.remove(579)
        tree.delete(579)
        std.remove(640)
        tree.delete(640)
        std.remove(974)
        tree.delete(974)
        std.remove(556)
        tree.delete(556)
        std.remove(887)
        tree.delete(887)
        std.remove(293)
        tree.delete(293)
        std.remove(322)
        tree.delete(322)
        std.remove(191)
        tree.delete(191)
        std.remove(242)
        tree.delete(242)
        std.remove(605)
        tree.delete(605)
        std.remove(798)
        tree.delete(798)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion3() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(297, 786)
        tree.add(297, 786)
        std.put(603, 81)
        tree.add(603, 81)
        std.put(149, 778)
        tree.add(149, 778)
        std.put(552, 600)
        tree.add(552, 600)
        std.put(738, 98)
        tree.add(738, 98)
        std.put(7, 469)
        tree.add(7, 469)
        std.put(943, 430)
        tree.add(943, 430)
        std.put(839, 230)
        tree.add(839, 230)
        std.put(533, 657)
        tree.add(533, 657)
        std.put(227, 144)
        tree.add(227, 144)
        std.put(969, 466)
        tree.add(969, 466)
        std.put(810, 334)
        tree.add(810, 334)
        std.put(893, 12)
        tree.add(893, 12)
        std.put(27, 733)
        tree.add(27, 733)
        std.put(780, 441)
        tree.add(780, 441)
        std.remove(749)
        tree.delete(749)
        std.remove(35)
        tree.delete(35)
        std.remove(161)
        tree.delete(161)
        std.remove(390)
        tree.delete(390)
        std.remove(740)
        tree.delete(740)
        std.remove(554)
        tree.delete(554)
        std.remove(805)
        tree.delete(805)
        std.remove(369)
        tree.delete(369)
        std.remove(488)
        tree.delete(488)
        std.remove(621)
        tree.delete(621)
        std.remove(462)
        tree.delete(462)
        std.remove(502)
        tree.delete(502)
        std.remove(278)
        tree.delete(278)
        std.remove(384)
        tree.delete(384)
        std.remove(803)
        tree.delete(803)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion4() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(958, 788)
        tree.add(958, 788)
        std.put(570, 823)
        tree.add(570, 823)
        std.put(886, 126)
        tree.add(886, 126)
        std.put(202, 254)
        tree.add(202, 254)
        std.put(40, 327)
        tree.add(40, 327)
        std.put(543, 423)
        tree.add(543, 423)
        std.put(534, 156)
        tree.add(534, 156)
        std.put(938, 547)
        tree.add(938, 547)
        std.put(930, 53)
        tree.add(930, 53)
        std.put(885, 665)
        tree.add(885, 665)
        std.put(554, 596)
        tree.add(554, 596)
        std.put(911, 73)
        tree.add(911, 73)
        std.put(903, 591)
        tree.add(903, 591)
        std.put(799, 364)
        tree.add(799, 364)
        std.put(653, 29)
        tree.add(653, 29)
        std.remove(404)
        tree.delete(404)
        std.remove(220)
        tree.delete(220)
        std.remove(449)
        tree.delete(449)
        std.remove(283)
        tree.delete(283)
        std.remove(312)
        tree.delete(312)
        std.remove(655)
        tree.delete(655)
        std.remove(366)
        tree.delete(366)
        std.remove(748)
        tree.delete(748)
        std.remove(897)
        tree.delete(897)
        std.remove(77)
        tree.delete(77)
        std.remove(496)
        tree.delete(496)
        std.remove(430)
        tree.delete(430)
        std.remove(952)
        tree.delete(952)
        std.remove(201)
        tree.delete(201)
        std.remove(829)
        tree.delete(829)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion5() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(452, 225)
        tree.add(452, 225)
        std.put(610, 685)
        tree.add(610, 685)
        std.put(735, 357)
        tree.add(735, 357)
        std.put(818, 709)
        tree.add(818, 709)
        std.put(947, 87)
        tree.add(947, 87)
        std.put(787, 270)
        tree.add(787, 270)
        std.put(31, 345)
        tree.add(31, 345)
        std.put(745, 57)
        tree.add(745, 57)
        std.put(439, 743)
        tree.add(439, 743)
        std.put(86, 731)
        tree.add(86, 731)
        std.put(408, 39)
        tree.add(408, 39)
        std.put(221, 743)
        tree.add(221, 743)
        std.put(506, 360)
        tree.add(506, 360)
        std.put(260, 901)
        tree.add(260, 901)
        std.put(104, 488)
        tree.add(104, 488)
        std.remove(774)
        tree.delete(774)
        std.remove(116)
        tree.delete(116)
        std.remove(321)
        tree.delete(321)
        std.remove(629)
        tree.delete(629)
        std.remove(770)
        tree.delete(770)
        std.remove(629)
        tree.delete(629)
        std.remove(84)
        tree.delete(84)
        std.remove(426)
        tree.delete(426)
        std.remove(578)
        tree.delete(578)
        std.remove(913)
        tree.delete(913)
        std.remove(916)
        tree.delete(916)
        std.remove(188)
        tree.delete(188)
        std.remove(121)
        tree.delete(121)
        std.remove(627)
        tree.delete(627)
        std.remove(58)
        tree.delete(58)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion6() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(184, 74)
        tree.add(184, 74)
        std.put(626, 497)
        tree.add(626, 497)
        std.put(567, 533)
        tree.add(567, 533)
        std.put(684, 988)
        tree.add(684, 988)
        std.put(257, 607)
        tree.add(257, 607)
        std.put(495, 423)
        tree.add(495, 423)
        std.put(684, 441)
        tree.add(684, 441)
        std.put(440, 821)
        tree.add(440, 821)
        std.put(93, 438)
        tree.add(93, 438)
        std.put(223, 383)
        tree.add(223, 383)
        std.put(778, 922)
        tree.add(778, 922)
        std.put(268, 159)
        tree.add(268, 159)
        std.put(729, 604)
        tree.add(729, 604)
        std.put(754, 556)
        tree.add(754, 556)
        std.put(1, 837)
        tree.add(1, 837)
        std.remove(854)
        tree.delete(854)
        std.remove(443)
        tree.delete(443)
        std.remove(177)
        tree.delete(177)
        std.remove(732)
        tree.delete(732)
        std.remove(163)
        tree.delete(163)
        std.remove(298)
        tree.delete(298)
        std.remove(399)
        tree.delete(399)
        std.remove(808)
        tree.delete(808)
        std.remove(891)
        tree.delete(891)
        std.remove(563)
        tree.delete(563)
        std.remove(721)
        tree.delete(721)
        std.remove(935)
        tree.delete(935)
        std.remove(407)
        tree.delete(407)
        std.remove(52)
        tree.delete(52)
        std.remove(379)
        tree.delete(379)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion7() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(966, 518)
        tree.add(966, 518)
        std.put(965, 530)
        tree.add(965, 530)
        std.put(90, 759)
        tree.add(90, 759)
        std.put(969, 584)
        tree.add(969, 584)
        std.put(772, 726)
        tree.add(772, 726)
        std.put(216, 179)
        tree.add(216, 179)
        std.put(342, 456)
        tree.add(342, 456)
        std.put(516, 301)
        tree.add(516, 301)
        std.put(733, 166)
        tree.add(733, 166)
        std.put(719, 132)
        tree.add(719, 132)
        std.put(970, 436)
        tree.add(970, 436)
        std.put(724, 308)
        tree.add(724, 308)
        std.put(644, 845)
        tree.add(644, 845)
        std.put(93, 872)
        tree.add(93, 872)
        std.put(937, 133)
        tree.add(937, 133)
        std.remove(161)
        tree.delete(161)
        std.remove(67)
        tree.delete(67)
        std.remove(743)
        tree.delete(743)
        std.remove(475)
        tree.delete(475)
        std.remove(402)
        tree.delete(402)
        std.remove(562)
        tree.delete(562)
        std.remove(575)
        tree.delete(575)
        std.remove(525)
        tree.delete(525)
        std.remove(99)
        tree.delete(99)
        std.remove(316)
        tree.delete(316)
        std.remove(404)
        tree.delete(404)
        std.remove(970)
        tree.delete(970)
        std.remove(280)
        tree.delete(280)
        std.remove(465)
        tree.delete(465)
        std.remove(996)
        tree.delete(996)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion8() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(876, 286)
        tree.add(876, 286)
        std.put(519, 590)
        tree.add(519, 590)
        std.put(434, 286)
        tree.add(434, 286)
        std.put(902, 823)
        tree.add(902, 823)
        std.put(74, 506)
        tree.add(74, 506)
        std.put(506, 836)
        tree.add(506, 836)
        std.put(201, 544)
        tree.add(201, 544)
        std.put(610, 764)
        tree.add(610, 764)
        std.put(569, 438)
        tree.add(569, 438)
        std.put(947, 846)
        tree.add(947, 846)
        std.put(771, 269)
        tree.add(771, 269)
        std.put(887, 569)
        tree.add(887, 569)
        std.put(810, 403)
        tree.add(810, 403)
        std.put(285, 19)
        tree.add(285, 19)
        std.put(661, 117)
        tree.add(661, 117)
        std.remove(400)
        tree.delete(400)
        std.remove(85)
        tree.delete(85)
        std.remove(268)
        tree.delete(268)
        std.remove(325)
        tree.delete(325)
        std.remove(297)
        tree.delete(297)
        std.remove(53)
        tree.delete(53)
        std.remove(315)
        tree.delete(315)
        std.remove(835)
        tree.delete(835)
        std.remove(193)
        tree.delete(193)
        std.remove(933)
        tree.delete(933)
        std.remove(986)
        tree.delete(986)
        std.remove(847)
        tree.delete(847)
        std.remove(768)
        tree.delete(768)
        std.remove(354)
        tree.delete(354)
        std.remove(488)
        tree.delete(488)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion9() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(782, 367)
        tree.add(782, 367)
        std.put(413, 342)
        tree.add(413, 342)
        std.put(921, 973)
        tree.add(921, 973)
        std.put(425, 514)
        tree.add(425, 514)
        std.put(17, 145)
        tree.add(17, 145)
        std.put(470, 156)
        tree.add(470, 156)
        std.put(801, 724)
        tree.add(801, 724)
        std.put(3, 726)
        tree.add(3, 726)
        std.put(856, 12)
        tree.add(856, 12)
        std.put(315, 366)
        tree.add(315, 366)
        std.put(120, 749)
        tree.add(120, 749)
        std.put(317, 402)
        tree.add(317, 402)
        std.put(940, 408)
        tree.add(940, 408)
        std.put(255, 779)
        tree.add(255, 779)
        std.put(92, 751)
        tree.add(92, 751)
        std.remove(266)
        tree.delete(266)
        std.remove(258)
        tree.delete(258)
        std.remove(443)
        tree.delete(443)
        std.remove(779)
        tree.delete(779)
        std.remove(224)
        tree.delete(224)
        std.remove(978)
        tree.delete(978)
        std.remove(984)
        tree.delete(984)
        std.remove(468)
        tree.delete(468)
        std.remove(973)
        tree.delete(973)
        std.remove(777)
        tree.delete(777)
        std.remove(131)
        tree.delete(131)
        std.remove(336)
        tree.delete(336)
        std.remove(92)
        tree.delete(92)
        std.remove(290)
        tree.delete(290)
        std.remove(825)
        tree.delete(825)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion10() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(550, 76)
        tree.add(550, 76)
        std.put(693, 836)
        tree.add(693, 836)
        std.put(58, 280)
        tree.add(58, 280)
        std.put(367, 651)
        tree.add(367, 651)
        std.put(368, 462)
        tree.add(368, 462)
        std.put(735, 471)
        tree.add(735, 471)
        std.put(854, 615)
        tree.add(854, 615)
        std.put(947, 815)
        tree.add(947, 815)
        std.put(191, 11)
        tree.add(191, 11)
        std.put(17, 384)
        tree.add(17, 384)
        std.put(339, 281)
        tree.add(339, 281)
        std.put(435, 551)
        tree.add(435, 551)
        std.put(815, 26)
        tree.add(815, 26)
        std.put(11, 956)
        tree.add(11, 956)
        std.put(924, 918)
        tree.add(924, 918)
        std.remove(83)
        tree.delete(83)
        std.remove(216)
        tree.delete(216)
        std.remove(476)
        tree.delete(476)
        std.remove(288)
        tree.delete(288)
        std.remove(55)
        tree.delete(55)
        std.remove(827)
        tree.delete(827)
        std.remove(270)
        tree.delete(270)
        std.remove(780)
        tree.delete(780)
        std.remove(248)
        tree.delete(248)
        std.remove(71)
        tree.delete(71)
        std.remove(313)
        tree.delete(313)
        std.remove(986)
        tree.delete(986)
        std.remove(721)
        tree.delete(721)
        std.remove(940)
        tree.delete(940)
        std.remove(589)
        tree.delete(589)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion11() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(586, 1000)
        tree.add(586, 1000)
        std.put(311, 884)
        tree.add(311, 884)
        std.put(705, 539)
        tree.add(705, 539)
        std.put(261, 243)
        tree.add(261, 243)
        std.put(876, 449)
        tree.add(876, 449)
        std.put(250, 417)
        tree.add(250, 417)
        std.put(444, 302)
        tree.add(444, 302)
        std.put(315, 54)
        tree.add(315, 54)
        std.put(671, 113)
        tree.add(671, 113)
        std.put(491, 208)
        tree.add(491, 208)
        std.put(260, 850)
        tree.add(260, 850)
        std.put(100, 794)
        tree.add(100, 794)
        std.put(395, 779)
        tree.add(395, 779)
        std.put(107, 915)
        tree.add(107, 915)
        std.put(504, 631)
        tree.add(504, 631)
        std.remove(385)
        tree.delete(385)
        std.remove(318)
        tree.delete(318)
        std.remove(248)
        tree.delete(248)
        std.remove(742)
        tree.delete(742)
        std.remove(237)
        tree.delete(237)
        std.remove(943)
        tree.delete(943)
        std.remove(60)
        tree.delete(60)
        std.remove(239)
        tree.delete(239)
        std.remove(119)
        tree.delete(119)
        std.remove(360)
        tree.delete(360)
        std.remove(587)
        tree.delete(587)
        std.remove(225)
        tree.delete(225)
        std.remove(93)
        tree.delete(93)
        std.remove(898)
        tree.delete(898)
        std.remove(179)
        tree.delete(179)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion12() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(327, 868)
        tree.add(327, 868)
        std.put(387, 967)
        tree.add(387, 967)
        std.put(678, 307)
        tree.add(678, 307)
        std.put(654, 917)
        tree.add(654, 917)
        std.put(844, 315)
        tree.add(844, 315)
        std.put(755, 404)
        tree.add(755, 404)
        std.put(956, 83)
        tree.add(956, 83)
        std.put(980, 445)
        tree.add(980, 445)
        std.put(709, 732)
        tree.add(709, 732)
        std.put(821, 803)
        tree.add(821, 803)
        std.put(347, 57)
        tree.add(347, 57)
        std.put(6, 644)
        tree.add(6, 644)
        std.put(401, 751)
        tree.add(401, 751)
        std.put(460, 567)
        tree.add(460, 567)
        std.put(322, 467)
        tree.add(322, 467)
        std.remove(374)
        tree.delete(374)
        std.remove(959)
        tree.delete(959)
        std.remove(429)
        tree.delete(429)
        std.remove(174)
        tree.delete(174)
        std.remove(234)
        tree.delete(234)
        std.remove(48)
        tree.delete(48)
        std.remove(675)
        tree.delete(675)
        std.remove(917)
        tree.delete(917)
        std.remove(237)
        tree.delete(237)
        std.remove(449)
        tree.delete(449)
        std.remove(989)
        tree.delete(989)
        std.remove(108)
        tree.delete(108)
        std.remove(10)
        tree.delete(10)
        std.remove(606)
        tree.delete(606)
        std.remove(907)
        tree.delete(907)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion13() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(899, 239)
        tree.add(899, 239)
        std.put(552, 293)
        tree.add(552, 293)
        std.put(993, 223)
        tree.add(993, 223)
        std.put(967, 897)
        tree.add(967, 897)
        std.put(726, 868)
        tree.add(726, 868)
        std.put(883, 479)
        tree.add(883, 479)
        std.put(957, 986)
        tree.add(957, 986)
        std.put(466, 915)
        tree.add(466, 915)
        std.put(984, 381)
        tree.add(984, 381)
        std.put(385, 318)
        tree.add(385, 318)
        std.put(829, 174)
        tree.add(829, 174)
        std.put(436, 635)
        tree.add(436, 635)
        std.put(0, 722)
        tree.add(0, 722)
        std.put(474, 810)
        tree.add(474, 810)
        std.put(705, 660)
        tree.add(705, 660)
        std.remove(750)
        tree.delete(750)
        std.remove(331)
        tree.delete(331)
        std.remove(694)
        tree.delete(694)
        std.remove(352)
        tree.delete(352)
        std.remove(187)
        tree.delete(187)
        std.remove(998)
        tree.delete(998)
        std.remove(432)
        tree.delete(432)
        std.remove(854)
        tree.delete(854)
        std.remove(727)
        tree.delete(727)
        std.remove(99)
        tree.delete(99)
        std.remove(451)
        tree.delete(451)
        std.remove(334)
        tree.delete(334)
        std.remove(445)
        tree.delete(445)
        std.remove(333)
        tree.delete(333)
        std.remove(524)
        tree.delete(524)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion14() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(227, 139)
        tree.add(227, 139)
        std.put(614, 522)
        tree.add(614, 522)
        std.put(282, 320)
        tree.add(282, 320)
        std.put(32, 510)
        tree.add(32, 510)
        std.put(289, 535)
        tree.add(289, 535)
        std.put(128, 748)
        tree.add(128, 748)
        std.put(774, 768)
        tree.add(774, 768)
        std.put(425, 648)
        tree.add(425, 648)
        std.put(352, 536)
        tree.add(352, 536)
        std.put(398, 885)
        tree.add(398, 885)
        std.put(221, 470)
        tree.add(221, 470)
        std.put(500, 646)
        tree.add(500, 646)
        std.put(390, 462)
        tree.add(390, 462)
        std.put(53, 808)
        tree.add(53, 808)
        std.put(276, 653)
        tree.add(276, 653)
        std.remove(73)
        tree.delete(73)
        std.remove(381)
        tree.delete(381)
        std.remove(171)
        tree.delete(171)
        std.remove(548)
        tree.delete(548)
        std.remove(689)
        tree.delete(689)
        std.remove(66)
        tree.delete(66)
        std.remove(156)
        tree.delete(156)
        std.remove(287)
        tree.delete(287)
        std.remove(658)
        tree.delete(658)
        std.remove(751)
        tree.delete(751)
        std.remove(29)
        tree.delete(29)
        std.remove(785)
        tree.delete(785)
        std.remove(449)
        tree.delete(449)
        std.remove(407)
        tree.delete(407)
        std.remove(658)
        tree.delete(658)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion15() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(381, 638)
        tree.add(381, 638)
        std.put(302, 658)
        tree.add(302, 658)
        std.put(146, 835)
        tree.add(146, 835)
        std.put(365, 660)
        tree.add(365, 660)
        std.put(70, 300)
        tree.add(70, 300)
        std.put(264, 866)
        tree.add(264, 866)
        std.put(250, 186)
        tree.add(250, 186)
        std.put(694, 93)
        tree.add(694, 93)
        std.put(376, 903)
        tree.add(376, 903)
        std.put(117, 892)
        tree.add(117, 892)
        std.put(902, 820)
        tree.add(902, 820)
        std.put(139, 936)
        tree.add(139, 936)
        std.put(314, 46)
        tree.add(314, 46)
        std.put(836, 511)
        tree.add(836, 511)
        std.put(351, 871)
        tree.add(351, 871)
        std.remove(682)
        tree.delete(682)
        std.remove(315)
        tree.delete(315)
        std.remove(856)
        tree.delete(856)
        std.remove(263)
        tree.delete(263)
        std.remove(635)
        tree.delete(635)
        std.remove(404)
        tree.delete(404)
        std.remove(887)
        tree.delete(887)
        std.remove(652)
        tree.delete(652)
        std.remove(532)
        tree.delete(532)
        std.remove(542)
        tree.delete(542)
        std.remove(554)
        tree.delete(554)
        std.remove(532)
        tree.delete(532)
        std.remove(5)
        tree.delete(5)
        std.remove(87)
        tree.delete(87)
        std.remove(755)
        tree.delete(755)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion16() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(839, 729)
        tree.add(839, 729)
        std.put(679, 513)
        tree.add(679, 513)
        std.put(19, 855)
        tree.add(19, 855)
        std.put(445, 733)
        tree.add(445, 733)
        std.put(960, 323)
        tree.add(960, 323)
        std.put(14, 213)
        tree.add(14, 213)
        std.put(47, 428)
        tree.add(47, 428)
        std.put(249, 946)
        tree.add(249, 946)
        std.put(867, 86)
        tree.add(867, 86)
        std.put(168, 871)
        tree.add(168, 871)
        std.put(37, 963)
        tree.add(37, 963)
        std.put(893, 944)
        tree.add(893, 944)
        std.put(581, 467)
        tree.add(581, 467)
        std.put(865, 738)
        tree.add(865, 738)
        std.put(322, 974)
        tree.add(322, 974)
        std.remove(414)
        tree.delete(414)
        std.remove(175)
        tree.delete(175)
        std.remove(799)
        tree.delete(799)
        std.remove(937)
        tree.delete(937)
        std.remove(943)
        tree.delete(943)
        std.remove(968)
        tree.delete(968)
        std.remove(182)
        tree.delete(182)
        std.remove(176)
        tree.delete(176)
        std.remove(863)
        tree.delete(863)
        std.remove(477)
        tree.delete(477)
        std.remove(738)
        tree.delete(738)
        std.remove(707)
        tree.delete(707)
        std.remove(671)
        tree.delete(671)
        std.remove(480)
        tree.delete(480)
        std.remove(190)
        tree.delete(190)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion17() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(325, 942)
        tree.add(325, 942)
        std.put(756, 834)
        tree.add(756, 834)
        std.put(512, 864)
        tree.add(512, 864)
        std.put(409, 487)
        tree.add(409, 487)
        std.put(115, 791)
        tree.add(115, 791)
        std.put(148, 439)
        tree.add(148, 439)
        std.put(992, 400)
        tree.add(992, 400)
        std.put(274, 771)
        tree.add(274, 771)
        std.put(460, 225)
        tree.add(460, 225)
        std.put(686, 379)
        tree.add(686, 379)
        std.put(929, 546)
        tree.add(929, 546)
        std.put(200, 650)
        tree.add(200, 650)
        std.put(461, 633)
        tree.add(461, 633)
        std.put(522, 44)
        tree.add(522, 44)
        std.put(246, 796)
        tree.add(246, 796)
        std.remove(797)
        tree.delete(797)
        std.remove(312)
        tree.delete(312)
        std.remove(353)
        tree.delete(353)
        std.remove(329)
        tree.delete(329)
        std.remove(656)
        tree.delete(656)
        std.remove(946)
        tree.delete(946)
        std.remove(26)
        tree.delete(26)
        std.remove(133)
        tree.delete(133)
        std.remove(226)
        tree.delete(226)
        std.remove(311)
        tree.delete(311)
        std.remove(378)
        tree.delete(378)
        std.remove(721)
        tree.delete(721)
        std.remove(702)
        tree.delete(702)
        std.remove(235)
        tree.delete(235)
        std.remove(483)
        tree.delete(483)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion18() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(127, 599)
        tree.add(127, 599)
        std.put(749, 969)
        tree.add(749, 969)
        std.put(787, 675)
        tree.add(787, 675)
        std.put(564, 668)
        tree.add(564, 668)
        std.put(862, 978)
        tree.add(862, 978)
        std.put(968, 433)
        tree.add(968, 433)
        std.put(494, 458)
        tree.add(494, 458)
        std.put(756, 544)
        tree.add(756, 544)
        std.put(774, 956)
        tree.add(774, 956)
        std.put(199, 578)
        tree.add(199, 578)
        std.put(351, 229)
        tree.add(351, 229)
        std.put(925, 81)
        tree.add(925, 81)
        std.put(382, 92)
        tree.add(382, 92)
        std.put(798, 324)
        tree.add(798, 324)
        std.put(169, 731)
        tree.add(169, 731)
        std.remove(247)
        tree.delete(247)
        std.remove(581)
        tree.delete(581)
        std.remove(497)
        tree.delete(497)
        std.remove(96)
        tree.delete(96)
        std.remove(122)
        tree.delete(122)
        std.remove(547)
        tree.delete(547)
        std.remove(653)
        tree.delete(653)
        std.remove(741)
        tree.delete(741)
        std.remove(403)
        tree.delete(403)
        std.remove(649)
        tree.delete(649)
        std.remove(610)
        tree.delete(610)
        std.remove(441)
        tree.delete(441)
        std.remove(241)
        tree.delete(241)
        std.remove(393)
        tree.delete(393)
        std.remove(144)
        tree.delete(144)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion19() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(514, 744)
        tree.add(514, 744)
        std.put(712, 205)
        tree.add(712, 205)
        std.put(975, 105)
        tree.add(975, 105)
        std.put(280, 964)
        tree.add(280, 964)
        std.put(853, 781)
        tree.add(853, 781)
        std.put(770, 805)
        tree.add(770, 805)
        std.put(617, 272)
        tree.add(617, 272)
        std.put(610, 490)
        tree.add(610, 490)
        std.put(102, 907)
        tree.add(102, 907)
        std.put(682, 740)
        tree.add(682, 740)
        std.put(146, 589)
        tree.add(146, 589)
        std.put(749, 408)
        tree.add(749, 408)
        std.put(591, 418)
        tree.add(591, 418)
        std.put(36, 534)
        tree.add(36, 534)
        std.put(472, 588)
        tree.add(472, 588)
        std.remove(379)
        tree.delete(379)
        std.remove(428)
        tree.delete(428)
        std.remove(942)
        tree.delete(942)
        std.remove(419)
        tree.delete(419)
        std.remove(289)
        tree.delete(289)
        std.remove(559)
        tree.delete(559)
        std.remove(155)
        tree.delete(155)
        std.remove(37)
        tree.delete(37)
        std.remove(803)
        tree.delete(803)
        std.remove(79)
        tree.delete(79)
        std.remove(482)
        tree.delete(482)
        std.remove(473)
        tree.delete(473)
        std.remove(167)
        tree.delete(167)
        std.remove(552)
        tree.delete(552)
        std.remove(426)
        tree.delete(426)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
    @Test
    fun intDeletion20() {
        val tree: AVLTree<Int> = AVLTree<Int>()
        val std: MutableMap<Int, Any> = mutableMapOf()
        std.put(255, 790)
        tree.add(255, 790)
        std.put(839, 793)
        tree.add(839, 793)
        std.put(203, 666)
        tree.add(203, 666)
        std.put(294, 16)
        tree.add(294, 16)
        std.put(902, 256)
        tree.add(902, 256)
        std.put(487, 664)
        tree.add(487, 664)
        std.put(474, 858)
        tree.add(474, 858)
        std.put(410, 679)
        tree.add(410, 679)
        std.put(181, 498)
        tree.add(181, 498)
        std.put(294, 814)
        tree.add(294, 814)
        std.put(166, 896)
        tree.add(166, 896)
        std.put(792, 438)
        tree.add(792, 438)
        std.put(675, 889)
        tree.add(675, 889)
        std.put(576, 686)
        tree.add(576, 686)
        std.put(516, 928)
        tree.add(516, 928)
        std.remove(102)
        tree.delete(102)
        std.remove(912)
        tree.delete(912)
        std.remove(893)
        tree.delete(893)
        std.remove(1)
        tree.delete(1)
        std.remove(560)
        tree.delete(560)
        std.remove(37)
        tree.delete(37)
        std.remove(486)
        tree.delete(486)
        std.remove(334)
        tree.delete(334)
        std.remove(200)
        tree.delete(200)
        std.remove(519)
        tree.delete(519)
        std.remove(490)
        tree.delete(490)
        std.remove(542)
        tree.delete(542)
        std.remove(289)
        tree.delete(289)
        std.remove(528)
        tree.delete(528)
        std.remove(601)
        tree.delete(601)
        var a: Set<Pair<Int, Any>> = tree.iter().toSet()
        var b: Set<Pair<Int, Any>> = std.toList().toSet()
        assertEquals(b, a)
    }
}